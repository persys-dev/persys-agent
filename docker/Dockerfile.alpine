# Stage 1: Build PersysAgent
FROM alpine:3.18 AS builder

# Install build tools and dynamic dependencies
RUN apk add --no-cache \
    build-base \
    cmake \
    git \
    pkgconf \
    musl-dev \
    zlib-dev \
    libuuid \
    openssl-dev \
    curl-dev \
    util-linux-dev \
    linux-headers \
    autoconf \
    automake \
    libtool \
    python3 \
    && rm -rf /var/cache/apk/*

# Build static jsoncpp 1.9.5
RUN wget -q https://github.com/open-source-parsers/jsoncpp/archive/refs/tags/1.9.5.tar.gz -O /tmp/jsoncpp.tar.gz \
    && tar xzf /tmp/jsoncpp.tar.gz -C /tmp \
    && cd /tmp/jsoncpp-1.9.5 \
    && mkdir build && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr .. \
    && make -j$(nproc) \
    && make install \
    && ls -l /usr/lib/libjsoncpp.a \
    && rm -rf /tmp/jsoncpp*

# Install standalone Asio
RUN git clone --depth 1 --branch asio-1-30-2 https://github.com/chriskohlhoff/asio.git /tmp/asio \
    && mkdir -p /usr/include \
    && cp -r /tmp/asio/asio/include/asio /usr/include/ \
    && cp /tmp/asio/asio/include/asio.hpp /usr/include/ \
    && ls -l /usr/include/asio.hpp \
    && rm -rf /tmp/asio

# Install Crow framework
RUN git clone --depth 1 --branch v1.2 https://github.com/CrowCpp/Crow.git /tmp/crow \
    && cd /tmp/crow \
    && mkdir build && cd build \
    && cmake .. -DCROW_BUILD_EXAMPLES=OFF -DCROW_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr \
    && make -j$(nproc) \
    && make install \
    && ls -l /usr/include/crow.h \
    && rm -rf /tmp/crow

# Set working directory
WORKDIR /app

# Copy source files
COPY src/ ./src/
COPY CMakeLists.txt .

# Build PersysAgent with dynamic linking
RUN mkdir build && cd build \
    && cmake -DCMAKE_BUILD_TYPE=Release .. \
    && make -j$(nproc) \
    && strip --strip-unneeded PersysAgent \
    && ldd PersysAgent

# Stage 2: Runtime image
FROM alpine:3.18

# Install runtime dependencies (shared libraries)
RUN apk add --no-cache \
    ca-certificates \
    libcurl \
    openssl \
    libuuid \
    libstdc++ \
    libgcc \
    && rm -rf /var/cache/apk/*

# Install Docker CLI (static binary)
RUN wget -qO- https://download.docker.com/linux/static/stable/x86_64/docker-27.3.1.tgz | tar xz \
    && mv docker/docker /usr/local/bin/ \
    && rm -rf docker

# Install docker-compose (static binary)
RUN wget -qO /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-linux-x86_64 \
    && chmod +x /usr/local/bin/docker-compose

# Copy compiled binary from builder
COPY --from=builder /app/build/PersysAgent /usr/local/bin/PersysAgent

# Set working directory
WORKDIR /app

# Expose port for API
EXPOSE 8080

# Command to run the agent
CMD ["/usr/local/bin/PersysAgent"]